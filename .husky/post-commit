#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# 색상 코드
RED='\033[1;31m'
GREEN='\033[1;32m'
BOLD='\033[1m'
RESET='\033[0m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'

# 현재 브랜치 이름을 가져옵니다.
current_branch=$(git rev-parse --abbrev-ref HEAD)

# feature/ 로 시작하는 브랜치인 경우만 작업을 수행합니다.
if [[ $current_branch == feature/* ]]; then
  echo "${YELLOW} Current Branch : $current_branch"
  # upstream이 설정되어 있는지 확인합니다.
  upstream_check=$(git rev-parse --abbrev-ref --symbolic-full-name @{upstream} 2>/dev/null)

  # upstream이 없으면 -u를 통해 origin에 브랜치를 push합니다.
  # 이미 upstream이 설정된 경우엔 그냥 push합니다.
  if [ -z "$upstream_check" ]; then
    echo "${RED} $current_branch isn't up to date with the upstream"
    echo "${GREEN} It progresses both the upstream and pushes the changes."
    git push --set-upstream origin "$current_branch"

  if [ $? -ne 0 ]; then
    echo "${RED} Push failed! There was an error while pushing the changes."
    exit 1  # 오류가 발생한 경우 스크립트 종료
  fi

  # push 완료 후 dev 브랜치로 rebase를 실행합니다.
  git rebase dev

  if [ $? -ne 0 ]; then
    echo "${RED} Rebase failed! There was an error while rebasing with the dev branch."
    exit 1  # 오류가 발생한 경우 스크립트 종료
  fi
  
fi
